version: "3.7"
# Above we must declare the docker-compose file version which allows docker to
#    understand the syntax we are using. Normally does not need to change.

# Services (containers) we would like this document to run
services:
  # Nextcloud Application
  nextcloud:
    # Use the official nextcloud image (v21.0.0 at time of writing this)
    image: nextcloud:latest
    # Set to allow easy docker DNS name resolution - not strictly necessary
    container_name: nextcloud
    # Same as above
    hostname: nextcloud
    # Container will restart unless we specifically stop it
    restart: unless-stopped
    # Defines how we want our container to connect outside
    networks:
      # We ONLY connect the nextcloud container to our public-facing proxy network
      - proxy
      # Use an internal network for the nextcloud services
      - nextcloud
    # Open ports in the format host:container - REMOVE AFTER TESTING
    ports:
      # INSECURE - REMOVE AFTER TESTING
      - 80:80
    # Persistent volumes with bind mounts to easily move/backup data
    volumes:
      # I like to use the /opt folder to hold my docker bind mounted volumes
      - /opt/volumes/nextcloud:/var/www/html
    # Environmental (internal to the container) variables to simplify setup
    environment:
      # Set to your domain name - Specifying trusted domain for security
      NEXTCLOUD_TRUSTED_DOMAINS: $NEXTCLOUD_DOMAIN_NAME
      # Set to the name of your proxy container
      TRUSTED_PROXIES: traefik
      # Redis host name (container_name)
      REDIS_HOST: nc-redis

# Nextcloud Database - Using MariaDB, but can also use MySQL or PostgreSQL
  nc-db:
    # MariaDB 10.5 (not using latest to prevent update breakage)
    image: mariadb:10.5
    # Set to allow easy docker DNS name resolution - not strictly necessary
    container_name: nc-db
    # Same as above
    hostname: nc-db
    # Container will restart unless we specifically stop it
    restart: unless-stopped
    # Recommended database settings as listed in:
    # https://docs.nextcloud.com/server/21/admin_manual/configuration_database/linux_database_configuration.html
    command: --transaction-isolation=READ-COMMITTED --log-bin=mysqld-bin --binlog-format=ROW
    # Defines how we want our container to connect outside
    networks:
      # ONLY using an internal network and not exposing to the internet
      - nextcloud
    # Persistent volumes with bind mounts to easily move/backup data
    volumes:
      # I like to use the /opt folder to hold my docker bind mounted volumes
      - /opt/volumes/nextcloud-db:/var/lib/mysql
    secrets:
      - db_root_password
      - db_password
    environment:
      MYSQL_USER: nextcloud
      MYSQL_DATABASE: nextcloud
      MYSQL_ROOT_PASSWORD_FILE: /run/secrets/db_root_password
      MYSQL_PASSWORD_FILE: /run/secrets/db_password

# Nextcloud (in memory) Redis Cache - speed up lookup transactions
  # Speeds up Nextcloud by reducing the time spent "looking" for things
  nc-redis:
    # Official REDIS 6.2 image based upon alpine Linux (to keep it lightweight)
    image: redis:6.2-alpine
    # Set to allow easy docker DNS name resolution - not strictly necessary
    container_name: nc-redis
    # Same as above
    hostname: nc-redis
    # Container will restart unless we specifically stop it
    restart: unless-stopped
    # Defines how we want our container to connect outside
    networks:
    # ONLY using an internal network and not exposing to the internet
      - nextcloud
    # Persistent volumes with bind mounts to easily move/backup data
    volumes:
    # I like to use the /opt folder to hold my docker bind mounted volumes
      - /opt/volumes/nextcloud-redis:/data

# We declare networks at the high level to avoid confusion and to access those
#   not initally started by this document.
networks:
  # Traefik proxy network so Nextcloud can be seen by Traefik
  proxy:
    name: proxy

  # Internal facing network for Nextcloud containers
  nextcloud:
    name: nextcloud
    # Define how we want the network created
    driver: bridge

secrets:
   db_password:
     file: $DOCKER_SECRETS_DIR/db_password
   db_root_password:
     file: $DOCKER_SECRETS_DIR/db_root_password
